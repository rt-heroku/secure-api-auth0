/*
 * Created on 26 Jan 2017 ( Time 08:55:17 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.heroku.entities;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "interaction__c"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="interaction__c", schema="salesforce" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="Interaction.countAll", query="SELECT COUNT(x) FROM Interaction x" )
} )
public class Interaction implements Serializable
{
    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="isdeleted")
    private Boolean    isdeleted    ;

    @Column(name="sfid", length=18)
    private String     sfid         ;

    @Column(name="_hc_lastop", length=32)
    private String     hcLastop     ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="lastmodifieddate")
    private Date       lastModifiedDate ;

    @Column(name="lastmodifiedbyid", length=18)
    private String     lastModifiedById ;

    @Column(name="picture__c", length=255)
    private String     picture      ;

    @Column(name="contact__r__loyaltyid__c", length=255)
    private String     contactLoyaltyId ;

    @Column(name="contact__c", length=18)
    private String     contact      ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="createddate")
    private Date       createddate  ;

    @Column(name="campaign__c", length=18)
    private String     campaign     ;

    @Column(name="_hc_err", length=2147483647)
    private String     hcErr        ;

    @Column(name="type__c", length=200)
    private String     type         ;

    @Column(name="name__c", length=200)
    private String     interactionName ;

    @Column(name="createdbyid", length=18)
    private String     createdbyid  ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="lastreferenceddate")
    private Date       lastreferenceddate ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="lastvieweddate")
    private Date       lastvieweddate ;

    @Column(name="points__c")
    private Double     points       ;

    @Column(name="product__c", length=18)
    private String     product      ;

    @Column(name="name", length=80)
    private String     name         ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="systemmodstamp")
    private Date       systemmodstamp ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public Interaction()
    {
		super();
    }

    public Interaction update(Interaction a) {
		this.id = a.id;
        this.isdeleted = a.isdeleted;
        this.sfid = a.sfid;
        this.hcLastop = a.hcLastop;
        this.lastModifiedDate = a.lastModifiedDate;
        this.lastModifiedById = a.lastModifiedById;
        this.picture = a.picture;
        this.contactLoyaltyId = a.contactLoyaltyId;
        this.contact = a.contact;
        this.createddate = a.createddate;
        this.campaign = a.campaign;
        this.hcErr = a.hcErr;
        this.type = a.type;
        this.interactionName = a.interactionName;
        this.createdbyid = a.createdbyid;
        this.lastreferenceddate = a.lastreferenceddate;
        this.lastvieweddate = a.lastvieweddate;
        this.points = a.points;
        this.product = a.product;
        this.name = a.name;
        this.systemmodstamp = a.systemmodstamp;



		return a;
	}

    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id )
    {
        this.id = id ;
    }
    public Integer getId()
    {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : isdeleted ( bool ) 
    public void setIsdeleted( Boolean isdeleted )
    {
        this.isdeleted = isdeleted;
    }
    public Boolean getIsdeleted()
    {
        return this.isdeleted;
    }

    //--- DATABASE MAPPING : sfid ( varchar ) 
    public void setSfid( String sfid )
    {
        this.sfid = sfid;
    }
    public String getSfid()
    {
        return this.sfid;
    }

    //--- DATABASE MAPPING : _hc_lastop ( varchar ) 
    public void setHcLastop( String hcLastop )
    {
        this.hcLastop = hcLastop;
    }
    public String getHcLastop()
    {
        return this.hcLastop;
    }

    //--- DATABASE MAPPING : lastmodifieddate ( timestamp ) 
    public void setLastModifiedDate( Date lastModifiedDate )
    {
        this.lastModifiedDate = lastModifiedDate;
    }
    public Date getLastModifiedDate()
    {
        return this.lastModifiedDate;
    }

    //--- DATABASE MAPPING : lastmodifiedbyid ( varchar ) 
    public void setLastModifiedById( String lastModifiedById )
    {
        this.lastModifiedById = lastModifiedById;
    }
    public String getLastModifiedById()
    {
        return this.lastModifiedById;
    }

    //--- DATABASE MAPPING : picture__c ( varchar ) 
    public void setPicture( String picture )
    {
        this.picture = picture;
    }
    public String getPicture()
    {
        return this.picture;
    }

    //--- DATABASE MAPPING : contact__r__loyaltyid__c ( varchar ) 
    public void setContactLoyaltyId( String contactLoyaltyId )
    {
        this.contactLoyaltyId = contactLoyaltyId;
    }
    public String getContactLoyaltyId()
    {
        return this.contactLoyaltyId;
    }

    //--- DATABASE MAPPING : contact__c ( varchar ) 
    public void setContact( String contact )
    {
        this.contact = contact;
    }
    public String getContact()
    {
        return this.contact;
    }

    //--- DATABASE MAPPING : createddate ( timestamp ) 
    public void setCreateddate( Date createddate )
    {
        this.createddate = createddate;
    }
    public Date getCreateddate()
    {
        return this.createddate;
    }

    //--- DATABASE MAPPING : campaign__c ( varchar ) 
    public void setCampaign( String campaign )
    {
        this.campaign = campaign;
    }
    public String getCampaign()
    {
        return this.campaign;
    }

    //--- DATABASE MAPPING : _hc_err ( text ) 
    public void setHcErr( String hcErr )
    {
        this.hcErr = hcErr;
    }
    public String getHcErr()
    {
        return this.hcErr;
    }

    //--- DATABASE MAPPING : type__c ( varchar ) 
    public void setType( String type )
    {
        this.type = type;
    }
    public String getType()
    {
        return this.type;
    }

    //--- DATABASE MAPPING : name__c ( varchar ) 
    public void setInteractionName( String interactionName )
    {
        this.interactionName = interactionName;
    }
    public String getInteractionName()
    {
        return this.interactionName;
    }

    //--- DATABASE MAPPING : createdbyid ( varchar ) 
    public void setCreatedbyid( String createdbyid )
    {
        this.createdbyid = createdbyid;
    }
    public String getCreatedbyid()
    {
        return this.createdbyid;
    }

    //--- DATABASE MAPPING : lastreferenceddate ( timestamp ) 
    public void setLastreferenceddate( Date lastreferenceddate )
    {
        this.lastreferenceddate = lastreferenceddate;
    }
    public Date getLastreferenceddate()
    {
        return this.lastreferenceddate;
    }

    //--- DATABASE MAPPING : lastvieweddate ( timestamp ) 
    public void setLastvieweddate( Date lastvieweddate )
    {
        this.lastvieweddate = lastvieweddate;
    }
    public Date getLastvieweddate()
    {
        return this.lastvieweddate;
    }

    //--- DATABASE MAPPING : points__c ( float8 ) 
    public void setPoints( Double points )
    {
        this.points = points;
    }
    public Double getPoints()
    {
        return this.points;
    }

    //--- DATABASE MAPPING : product__c ( varchar ) 
    public void setProduct( String product )
    {
        this.product = product;
    }
    public String getProduct()
    {
        return this.product;
    }

    //--- DATABASE MAPPING : name ( varchar ) 
    public void setName( String name )
    {
        this.name = name;
    }
    public String getName()
    {
        return this.name;
    }

    //--- DATABASE MAPPING : systemmodstamp ( timestamp ) 
    public void setSystemmodstamp( Date systemmodstamp )
    {
        this.systemmodstamp = systemmodstamp;
    }
    public Date getSystemmodstamp()
    {
        return this.systemmodstamp;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(isdeleted);
        sb.append("|");
        sb.append(sfid);
        sb.append("|");
        sb.append(hcLastop);
        sb.append("|");
        sb.append(lastModifiedDate);
        sb.append("|");
        sb.append(lastModifiedById);
        sb.append("|");
        sb.append(picture);
        sb.append("|");
        sb.append(contactLoyaltyId);
        sb.append("|");
        sb.append(contact);
        sb.append("|");
        sb.append(createddate);
        sb.append("|");
        sb.append(campaign);
        sb.append("|");
        sb.append(hcErr);
        sb.append("|");
        sb.append(type);
        sb.append("|");
        sb.append(interactionName);
        sb.append("|");
        sb.append(createdbyid);
        sb.append("|");
        sb.append(lastreferenceddate);
        sb.append("|");
        sb.append(lastvieweddate);
        sb.append("|");
        sb.append(points);
        sb.append("|");
        sb.append(product);
        sb.append("|");
        sb.append(name);
        sb.append("|");
        sb.append(systemmodstamp);
        return sb.toString(); 
    } 

}